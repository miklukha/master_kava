{"version":3,"file":"static/js/828.9e927f7f.chunk.js","mappings":"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","sources":["pages/Profile/Profile.js","pages/Profile/Profile.styled.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { ProductOrder, Title, Button } from 'components';\nimport {\n  Input,\n  OrderDate,\n  OrderItem,\n  OrderList,\n  OrderTitle,\n  OrderWrapper,\n  ProductOrderList,\n  ProductSummary,\n  ProfileBtn,\n  ProfileEmail,\n  ProfileInformation,\n  ProfileItem,\n  ProfileList,\n  ProfileMenu,\n  ProfileName,\n  SectionTitle,\n  SectionWrapper,\n  Wrapper,\n  Label,\n} from './Profile.styled';\nimport { UilUser } from '@iconscout/react-unicons';\nimport { colors } from 'styles/utils/variables';\nimport * as API from 'services/api';\nimport toast from 'react-hot-toast';\nimport { Loader } from 'components';\n\nconst theme = createTheme({\n  palette: {\n    myColor: {\n      main: colors.auxiliaryText,\n    },\n  },\n});\n\nexport function Profile() {\n  const [selectedItem, setSelectedItem] = useState('contacts');\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n    reset,\n  } = useForm();\n\n  const onContactSubmit = async data => {\n    try {\n      await API.updateContactsUser(data);\n      toast.success('Інформація успішно оновлена');\n    } catch (error) {\n      console.log(error);\n      toast.error('Щось пішло не так, спробуйте пізніше');\n    }\n  };\n\n  const onPasswordSubmit = async data => {\n    try {\n      await API.updatePasswordUser(data);\n      toast.success('Пароль успішно оновлений');\n      reset();\n    } catch (error) {\n      const statusError = error.response;\n\n      if (statusError.status === 400) {\n        toast.error('Неправильний старий пароль');\n      } else {\n        console.log(error);\n        toast.error('Щось пішло не так, спробуйте пізніше');\n      }\n    }\n  };\n\n  const phoneValidation = {\n    pattern: {\n      value: /^(\\+38)?(0\\d{9})$/,\n      message: 'Невірний формат номера (+380961234567)',\n    },\n  };\n\n  const handleClick = e => {\n    setSelectedItem(e.target.value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const user = await API.getCurrentUser();\n        setUser(user);\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          console.log('User is not authorized');\n        } else {\n          console.log(error);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Title>ПРОФІЛЬ</Title>\n      {user && (\n        <Wrapper>\n          <ProfileMenu>\n            <ProfileInformation>\n              <UilUser width=\"30px\" height=\"30px\" />\n              <div>\n                <ProfileName>{user.name}</ProfileName>\n                <ProfileEmail>{user.email}</ProfileEmail>\n              </div>\n            </ProfileInformation>\n            <ProfileList>\n              <ProfileItem>\n                <ProfileBtn\n                  selected={selectedItem === 'contacts'}\n                  type=\"button\"\n                  value=\"contacts\"\n                  aria-label=\"перейти на сторінку контактна інформація\"\n                  onClick={e => handleClick(e)}\n                >\n                  Контактна інформація\n                </ProfileBtn>\n              </ProfileItem>\n              <ProfileItem>\n                <ProfileBtn\n                  selected={selectedItem === 'password'}\n                  type=\"button\"\n                  value=\"password\"\n                  aria-label=\"перейти на сторінку зміни паролю\"\n                  onClick={e => handleClick(e)}\n                >\n                  Зміна паролю\n                </ProfileBtn>\n              </ProfileItem>\n              <ProfileItem>\n                <ProfileBtn\n                  selected={selectedItem === 'history'}\n                  type=\"button\"\n                  value=\"history\"\n                  aria-label=\"перейти на сторінку історія замовлень\"\n                  onClick={e => handleClick(e)}\n                >\n                  Історія замовлень\n                </ProfileBtn>\n              </ProfileItem>\n            </ProfileList>\n          </ProfileMenu>\n          {selectedItem === 'contacts' && (\n            <SectionWrapper>\n              <SectionTitle>Контактна інформація</SectionTitle>\n              <form onSubmit={handleSubmit(onContactSubmit)}>\n                <Label htmlFor=\"lastName\">Прізвище</Label>\n                <Input\n                  {...register('lastName')}\n                  id=\"lastName\"\n                  error={!!errors?.lastName}\n                  helperText={errors?.lastName?.message}\n                  color=\"myColor\"\n                  defaultValue={user?.shipping?.lastName || ''}\n                />\n                <Label htmlFor=\"firstName\">Ім'я</Label>\n                <Input\n                  {...register('firstName')}\n                  id=\"firstName\"\n                  error={!!errors?.firstName}\n                  helperText={errors?.firstName?.message}\n                  color=\"myColor\"\n                  defaultValue={user?.shipping?.firstName || ''}\n                />\n                <Label htmlFor=\"phone\">Телефон</Label>\n                <Input\n                  {...register('phone', phoneValidation)}\n                  id=\"phone\"\n                  error={!!errors?.phone}\n                  helperText={errors?.phone?.message}\n                  color=\"myColor\"\n                  defaultValue={user?.shipping?.phone || '+380'}\n                />\n                <Button type=\"submit\">Відправити</Button>\n              </form>\n            </SectionWrapper>\n          )}\n          {selectedItem === 'history' && (\n            <SectionWrapper>\n              <SectionTitle>Ваші замовлення</SectionTitle>\n              <OrderList>\n                <OrderItem>\n                  <OrderWrapper>\n                    <OrderTitle>Замовлення № 342452-21</OrderTitle>\n                    <OrderDate>06.05.2023</OrderDate>\n                  </OrderWrapper>\n                  <ProductOrderList>\n                    <ProductOrder placing />\n                    <ProductOrder placing />\n                  </ProductOrderList>\n                  <ProductSummary>Разом: 1310</ProductSummary>\n                </OrderItem>\n                <OrderItem>\n                  <OrderWrapper>\n                    <OrderTitle>Замовлення № 342452-21</OrderTitle>\n                    <OrderDate>06.05.2023</OrderDate>\n                  </OrderWrapper>\n                  <ProductOrderList>\n                    <ProductOrder placing />\n                    <ProductOrder placing />\n                  </ProductOrderList>\n                  <ProductSummary>Разом: 1310</ProductSummary>\n                </OrderItem>\n              </OrderList>\n            </SectionWrapper>\n          )}\n          {selectedItem === 'password' && (\n            <SectionWrapper>\n              <SectionTitle>Зміна паролю</SectionTitle>\n              <form onSubmit={handleSubmit(onPasswordSubmit)}>\n                <Label htmlFor=\"oldPassword\">Старий пароль</Label>\n                <Input\n                  {...register('oldPassword')}\n                  id=\"oldPassword\"\n                  type=\"password\"\n                  error={!!errors?.oldPassword}\n                  helperText={errors?.oldPassword?.message}\n                  color=\"myColor\"\n                />\n                <Label htmlFor=\"newPassword\">Новий пароль</Label>\n                <Input\n                  {...register('newPassword', {\n                    required: \"Це поле обов'язкове\",\n                    minLength: 8,\n                  })}\n                  type=\"password\"\n                  id=\"newPassword\"\n                  error={!!errors?.newPassword}\n                  helperText={\n                    errors?.newPassword\n                      ? errors?.email?.newPassword === 'required'\n                        ? \"Це поле обов'язкове\"\n                        : 'Пароль має бути мінімум 8 символів'\n                      : ''\n                  }\n                  color=\"myColor\"\n                />\n                <Label htmlFor=\"repeatNewPassword\">\n                  Підтвердження нового паролю\n                </Label>\n                <Input\n                  {...register('repeatNewPassword', {\n                    required: \"Це поле обов'язкове\",\n                    validate: value => value === watch('newPassword'),\n                  })}\n                  id=\"repeatNewPassword\"\n                  type=\"password\"\n                  error={!!errors?.repeatNewPassword}\n                  helperText={\n                    errors?.repeatNewPassword\n                      ? errors?.repeatNewPassword?.type === 'required'\n                        ? \"Це поле обов'язкове\"\n                        : 'Паролі не співпадають'\n                      : ''\n                  }\n                  color=\"myColor\"\n                />\n                <Button type=\"submit\">Відправити</Button>\n              </form>\n            </SectionWrapper>\n          )}\n        </Wrapper>\n      )}\n    </ThemeProvider>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors, fontSizes, mq, utils } from 'styles/utils/variables';\nimport { TextField, InputLabel } from '@mui/material';\n\nexport const Wrapper = styled.div`\n  ${mq.tablet} {\n    display: flex;\n    gap: 20px;\n  }\n\n  ${mq.desktop} {\n    gap: 30px;\n  }\n`;\n\nexport const ProfileMenu = styled.div`\n  width: 100%;\n  padding: 20px 15px;\n  border-radius: ${utils.borderRadius};\n\n  background-color: ${colors.auxiliaryBg};\n\n  ${mq.onlyMobile} {\n    margin-bottom: 30px;\n  }\n\n  ${mq.tablet} {\n    width: 240px;\n    height: 196px;\n  }\n\n  ${mq.desktop} {\n    width: 270px;\n  }\n`;\n\nexport const ProfileInformation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid ${colors.mainText};\n`;\n\nexport const ProfileName = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nexport const ProfileEmail = styled.span`\n  color: ${colors.auxiliaryText};\n`;\n\nexport const ProfileList = styled.ul``;\n\nexport const ProfileItem = styled.li`\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ProfileBtn = styled.button`\n  color: ${({ selected }) => selected && colors.accent};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: ${fontSizes.l};\n  font-weight: 500;\n  margin-bottom: 20px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid ${colors.auxiliary};\n`;\n\nexport const OrderList = styled.ul``;\n\nexport const OrderItem = styled.li`\n  /* padding: 10px 0; */\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid ${colors.auxiliary};\n\n  &:last-of-type {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: 0;\n  }\n`;\n\nexport const OrderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 20px;\n`;\n\nexport const OrderTitle = styled.span`\n  font-weight: 500;\n`;\n\nexport const OrderDate = styled.span``;\n\nexport const ProductOrderList = styled.ul`\n  margin-bottom: 10px;\n`;\n\nexport const ProductSummary = styled.span`\n  font-weight: 500;\n  display: block;\n  text-align: right;\n`;\n\nexport const SectionWrapper = styled.div`\n  width: 100%;\n\n  & button {\n    display: block;\n\n    ${mq.tablet} {\n      width: 400px;\n    }\n  }\n`;\n\nexport const Input = styled(TextField)`\n  margin-bottom: 10px;\n  width: 100%;\n  background-color: ${colors.mainBg};\n\n  & input {\n    font-size: ${fontSizes.s};\n    padding-top: 12px;\n    padding-bottom: 12px;\n  }\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n\n  ${mq.tablet} {\n    width: 400px;\n  }\n`;\n\nexport const Label = styled(InputLabel)`\n  font-size: ${fontSizes.xs};\n  color: ${colors.auxiliaryText};\n`;\n"],"names":["theme","createTheme","palette","myColor","main","colors","Profile","_errors$lastName","_user$shipping","_errors$firstName","_user$shipping2","_errors$phone","_user$shipping3","_errors$oldPassword","_errors$email","_errors$repeatNewPass","_useState","useState","_useState2","_slicedToArray","selectedItem","setSelectedItem","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","user","setUser","_useForm","useForm","register","handleSubmit","errors","formState","watch","reset","onContactSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","API","toast","t0","console","log","stop","_x","apply","arguments","onPasswordSubmit","_ref2","_callee2","_context2","response","status","_x2","handleClick","e","target","value","useEffect","_callee3","_user","_context3","sent","finish","_jsx","Loader","_jsxs","ThemeProvider","children","Title","Wrapper","ProfileMenu","ProfileInformation","UilUser","width","height","ProfileName","name","ProfileEmail","email","ProfileList","ProfileItem","ProfileBtn","selected","type","onClick","SectionWrapper","SectionTitle","onSubmit","Label","htmlFor","Input","_objectSpread","id","error","lastName","helperText","message","color","defaultValue","shipping","firstName","pattern","phone","Button","OrderList","OrderItem","OrderWrapper","OrderTitle","OrderDate","ProductOrderList","ProductOrder","placing","ProductSummary","oldPassword","required","minLength","newPassword","validate","repeatNewPassword","styled","_templateObject","_taggedTemplateLiteral","mq","_templateObject2","utils","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","fontSizes","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","TextField","_templateObject18","InputLabel","_templateObject19"],"sourceRoot":""}