{"version":3,"file":"static/js/812.c315ec9d.chunk.js","mappings":"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","sources":["pages/AboutUs.js","../node_modules/@iconscout/react-unicons/icons/uil-map-marker.js","../node_modules/@iconscout/react-unicons/icons/uil-clock.js","pages/Contacts/Contacts.js","pages/Contacts/Contacts.styled.js","pages/Home.js","pages/PaymentDelivery.js","pages/PlacingOrder/PlacingOrder.js","pages/PlacingOrder/PlacingOrder.styled.js","pages/Product/Product.js","../node_modules/@iconscout/react-unicons/icons/uil-check.js","pages/Product/Product.styled.js","pages/Profile/Profile.js","pages/Profile/Profile.styled.js","pages/Reviews/Reviews.js","pages/Reviews/Reviews.styled.js","../node_modules/@iconscout/react-unicons/icons/uil-filter.js","pages/Shop/Shop.js","pages/Shop/Shop.styled.js"],"sourcesContent":["import { Title } from 'components';\n\nexport function AboutUs() {\n  return (\n    <>\n      <Title>ПРО НАС</Title>\n      <p>\n        Ми доставляємо товар транспортними службами по Україні (Нова Пошта,\n        Делівері, САТ, Інтайм, Міст Експрес). Доставка транспортними службами\n        відбувається за рахунок покупця. Зверніть, будь ласка, увагу:\n        замовлення, зроблені після 11:00, відправляються на наступний день.\n        Оплатити замовлення Ви можете такими способами: Privat24 – з Вами\n        зв’яжеться наш менеджер та уточнить деталі платежу Накладений платіж –\n        відправка товарів проводиться тільки після передоплати 5% від вартості\n        замовлення, оплата здійснюється у відділенні перевізника при одержанні\n        замовлення і оплачується клієнтом додатково: Нова пошта – 20 грн і 2 %\n        від суми повернених коштів; Інтайм – 15 грн і 2 % від суми повернених\n        коштів; Міст Експрес – 2 % від суми повернених коштів, але не менше 15\n        грн; САТ - 1,5 % від суми повернених коштів; Делівері – 10 грн і 1,5%\n        від суми повернених коштів, перелік відділень, на яких діє послуга,\n        можна перевірити за посиланням. Розрахунковий рахунок для фізичних та\n        юридичних осіб. Просимо деталі уточнювати з менеджером. Доставка\n        кур’єром по Львову щовівторка та щочетверга. ДОСТАВКА по Львову при\n        замовленні та оплаті через інтернет-магазин на суму від 2000 грн.\n        безкоштовно. Мінімальне замовлення 700 грн., вартість доставки від\n        700-2000 складає 150 грн., при замовленні від 2000 грн - доставка\n        безкоштовно у ПН-ПТ. Ви також можете самостійно забрати придбаний товар\n        в нашому офісі за адресою м. Львів, вул. Зелена, 301, попередньо\n        уточнивши у менеджера наявність товарів на складі. ПОРЯДОК ПОВЕРНЕННЯ\n        ТОВАРУ НАЛЕЖНОЇ ЯКОСТІ Повернення товару проводиться згідно чинного\n        законодавства України. Повернення товару проводиться за рахунок Покупця.\n        Детальніше про умови повернення, ви можете дізнатись з договору оферти,\n        розміщеному на нашому сайті. Якщо у Вас виникнуть запитання стосовно\n        відправлення чи одержання Вашого замовлення, Ви можете зателефонувати за\n        номерами, вказаними на сайті.\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilMapMarker = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M12,2a8,8,0,0,0-8,8c0,5.4,7.05,11.5,7.35,11.76a1,1,0,0,0,1.3,0C13,21.5,20,15.4,20,10A8,8,0,0,0,12,2Zm0,17.65c-2.13-2-6-6.31-6-9.65a6,6,0,0,1,12,0C18,13.34,14.13,17.66,12,19.65ZM12,6a4,4,0,1,0,4,4A4,4,0,0,0,12,6Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,12,12Z'\n  }));\n};\n\nUilMapMarker.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilMapMarker.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilMapMarker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilClock = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M15.09814,12.63379,13,11.42285V7a1,1,0,0,0-2,0v5a.99985.99985,0,0,0,.5.86621l2.59814,1.5a1.00016,1.00016,0,1,0,1-1.73242ZM12,2A10,10,0,1,0,22,12,10.01114,10.01114,0,0,0,12,2Zm0,18a8,8,0,1,1,8-8A8.00917,8.00917,0,0,1,12,20Z'\n  }));\n};\n\nUilClock.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilClock.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilClock;","import { Title, Feedback } from 'components';\nimport {\n  ContactsList,\n  ContactsItem,\n  ContactsLink,\n  Wrapper,\n  Map,\n} from './Contacts.styled';\nimport {\n  UilMapMarker,\n  UilPhoneAlt,\n  UilEnvelopeAlt,\n  UilClock,\n} from '@iconscout/react-unicons';\n\nexport function Contacts() {\n  return (\n    <>\n      <Title>КОНТАКТИ</Title>\n      <Wrapper>\n        <div>\n          <ContactsList>\n            <ContactsItem>\n              <UilMapMarker width=\"30px\" height=\"30px\" />\n              <ContactsLink href=\"/\">\n                м. Київ, вул. Сім’ї Сосняних 11\n              </ContactsLink>\n            </ContactsItem>\n            <ContactsItem>\n              <UilEnvelopeAlt width=\"30px\" height=\"30px\" />\n              <ContactsLink href=\"mailto:master_kava@gmail.com\">\n                master_kava@gmail.com\n              </ContactsLink>\n            </ContactsItem>\n            <ContactsItem>\n              <UilPhoneAlt width=\"30px\" height=\"30px\" />\n              <ContactsLink href=\"tel:+380671429022\">\n                +380671429022\n              </ContactsLink>\n            </ContactsItem>\n            <ContactsItem>\n              <UilClock width=\"30px\" height=\"30px\" />\n              <span>Пн.-Пт. з 10:00 до 18:00 | Сб Нд – вихідні</span>\n            </ContactsItem>\n          </ContactsList>\n\n          <Feedback style={{ marginBottom: 20 }}>\n            Форма зворотнього зв'язку\n          </Feedback>\n        </div>\n        <Map />\n      </Wrapper>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors, mq, utils } from 'styles/utils/variables';\n\nexport const Wrapper = styled.div`\n  ${mq.tablet} {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const ContactsList = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ContactsLink = styled.a`\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const Map = styled.div`\n  width: 360px;\n  height: 163px;\n  background-color: gray;\n\n  ${mq.tablet} {\n    width: 385px;\n    height: 153px;\n  }\n\n  ${mq.desktop} {\n    width: 636px;\n    height: 260px;\n  }\n`;\n","import { Hero, Features, Popular, ReviewsHome } from 'layouts';\n\nexport function Home() {\n  return (\n    <>\n      <Hero />\n      <Features />\n      <Popular />\n      <ReviewsHome />\n    </>\n  );\n}\n","import { Title } from 'components';\n\nexport function PaymentDelivery() {\n  return (\n    <>\n      <Title>ОПЛАТА ТА ДОСТАВКА</Title>\n      <p>\n        Ми доставляємо товар транспортними службами по Україні (Нова Пошта,\n        Делівері, САТ, Інтайм, Міст Експрес). Доставка транспортними службами\n        відбувається за рахунок покупця. Зверніть, будь ласка, увагу:\n        замовлення, зроблені після 11:00, відправляються на наступний день.\n        Оплатити замовлення Ви можете такими способами: Privat24 – з Вами\n        зв’яжеться наш менеджер та уточнить деталі платежу Накладений платіж –\n        відправка товарів проводиться тільки після передоплати 5% від вартості\n        замовлення, оплата здійснюється у відділенні перевізника при одержанні\n        замовлення і оплачується клієнтом додатково: Нова пошта – 20 грн і 2 %\n        від суми повернених коштів; Інтайм – 15 грн і 2 % від суми повернених\n        коштів; Міст Експрес – 2 % від суми повернених коштів, але не менше 15\n        грн; САТ - 1,5 % від суми повернених коштів; Делівері – 10 грн і 1,5%\n        від суми повернених коштів, перелік відділень, на яких діє послуга,\n        можна перевірити за посиланням. Розрахунковий рахунок для фізичних та\n        юридичних осіб. Просимо деталі уточнювати з менеджером. Доставка\n        кур’єром по Львову щовівторка та щочетверга. ДОСТАВКА по Львову при\n        замовленні та оплаті через інтернет-магазин на суму від 2000 грн.\n        безкоштовно. Мінімальне замовлення 700 грн., вартість доставки від\n        700-2000 складає 150 грн., при замовленні від 2000 грн - доставка\n        безкоштовно у ПН-ПТ. Ви також можете самостійно забрати придбаний товар\n        в нашому офісі за адресою м. Львів, вул. Зелена, 301, попередньо\n        уточнивши у менеджера наявність товарів на складі. ПОРЯДОК ПОВЕРНЕННЯ\n        ТОВАРУ НАЛЕЖНОЇ ЯКОСТІ Повернення товару проводиться згідно чинного\n        законодавства України. Повернення товару проводиться за рахунок Покупця.\n        Детальніше про умови повернення, ви можете дізнатись з договору оферти,\n        розміщеному на нашому сайті. Якщо у Вас виникнуть запитання стосовно\n        відправлення чи одержання Вашого замовлення, Ви можете зателефонувати за\n        номерами, вказаними на сайті.\n      </p>\n    </>\n  );\n}\n","// import { createTheme } from '@material-ui';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Title } from 'components';\nimport {\n  DeliveryDetails,\n  DeliveryDetailsInput,\n  DeliveryDetailsItem,\n  DeliveryDetailsLabel,\n  DeliveryDetailsList,\n  DeliveryDetailsTitle,\n  OrderDetailsBtn,\n  OrderDetailsCondition,\n  OrderDetailsItem,\n  OrderDetailsLabel,\n  OrderDetailsList,\n  OrderDetailsTogether,\n  OrderDetailsValue,\n  OrderDetailsWrapper,\n  DeliveryItem,\n  OrderDetailsTip,\n  Wrapper,\n} from './PlacingOrder.styled';\n// import { CheckboxLabel } from 'components/ShopFilter/ShopFilter.styled';\n// import { visuallyHidden } from 'styles/utils/visuallyHidden';\nimport {\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  createTheme,\n  ThemeProvider,\n  Box,\n  Select,\n  MenuItem,\n  Typography,\n  InputLabel,\n  Checkbox,\n  FormGroup,\n  // TextField,\n  // FormControl,\n} from '@mui/material';\nimport { colors } from 'styles/utils/variables';\nimport liqpay from 'assets/images/liqpay.png';\n// import { FilterDropdown } from 'components';\n// import { typesOptions } from 'helpers';\n\nconst theme = createTheme({\n  palette: {\n    myColor: {\n      main: colors.accent,\n    },\n  },\n});\n\nexport function PlacingOrder() {\n  const {\n    register,\n    handleSubmit,\n    // formState: { errors },\n    control,\n  } = useForm();\n  const onSubmit = data => console.log(data);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Title>ОФОРМЛЕННЯ ЗАМОВЛЕННЯ</Title>\n      <Wrapper>\n        <OrderDetailsWrapper>\n          {/* <ul>\n                  <ProductOrder placing />\n                </ul> */}\n          <OrderDetailsTogether>Разом</OrderDetailsTogether>\n          <OrderDetailsList>\n            <OrderDetailsItem>\n              <OrderDetailsLabel>\n                Сума за <span>1</span> товар:\n              </OrderDetailsLabel>\n              <OrderDetailsValue>655 грн</OrderDetailsValue>\n            </OrderDetailsItem>\n            <OrderDetailsItem>\n              <OrderDetailsLabel>Вартість доставки:</OrderDetailsLabel>\n              <OrderDetailsValue>\n                за тарифами служби доставки*\n              </OrderDetailsValue>\n            </OrderDetailsItem>\n            <OrderDetailsItem>\n              <OrderDetailsLabel>До сплати:</OrderDetailsLabel>\n              <OrderDetailsValue>655 грн</OrderDetailsValue>\n            </OrderDetailsItem>\n          </OrderDetailsList>\n          <OrderDetailsTip>\n            *вартість доставки окремо оплачується при отриманні посилки у\n            відділенні\n          </OrderDetailsTip>\n        </OrderDetailsWrapper>\n        <FormGroup>\n          <DeliveryDetails onSubmit={handleSubmit(onSubmit)}>\n            <DeliveryDetailsTitle>Контактні дані</DeliveryDetailsTitle>\n            <DeliveryDetailsList>\n              <DeliveryDetailsItem>\n                {/* <FormControl>\n                      <InputLabel htmlFor=\"lastName\">\n                        <Typography style={{ fontSize: '14px' }}>\n                          Новою поштою\n                        </Typography>\n                      </InputLabel>\n                      <TextField id=\"lastName\" />\n                    </FormControl> */}\n                <DeliveryDetailsLabel htmlFor=\"lastName\">\n                  Прізвище*\n                </DeliveryDetailsLabel>\n                <DeliveryDetailsInput\n                  id=\"lastName\"\n                  {...register('lastName', { required: true })}\n                />\n              </DeliveryDetailsItem>\n              <DeliveryDetailsItem>\n                <DeliveryDetailsLabel htmlFor=\"firstName\">\n                  Ім’я*\n                </DeliveryDetailsLabel>\n                <DeliveryDetailsInput\n                  id=\"firstName\"\n                  {...register('firstName', { required: true })}\n                />\n              </DeliveryDetailsItem>\n              <DeliveryDetailsItem>\n                <DeliveryDetailsLabel htmlFor=\"phone\">\n                  Мобільний телефон*\n                </DeliveryDetailsLabel>\n                <DeliveryDetailsInput\n                  id=\"phone\"\n                  type=\"number\"\n                  {...register('phone', { required: true })}\n                />\n              </DeliveryDetailsItem>\n            </DeliveryDetailsList>\n            <DeliveryDetailsTitle>Доставка</DeliveryDetailsTitle>\n            <Controller\n              name=\"delivery\"\n              control={control}\n              defaultValue=\"\"\n              rules={{ required: true }}\n              render={({ field }) => (\n                <Box marginBottom={2.5}>\n                  <RadioGroup\n                    value={field.value}\n                    onChange={e => field.onChange(e.target.value)}\n                    sx={{ rowGap: 1 }}\n                  >\n                    <ul>\n                      <DeliveryItem>\n                        <FormControlLabel\n                          // sx={{\n                          //   border: '1px solid #E1DEE3',\n                          //   margin: 0,\n                          //   borderRadius: '4px',\n                          // }}\n                          value=\"NovaPoshta\"\n                          control={\n                            <Radio\n                              color=\"myColor\"\n                              size=\"small\"\n                              sx={{\n                                '& .MuiSvgIcon-root': {\n                                  fontSize: 16,\n                                },\n                              }}\n                            />\n                          }\n                          label={\n                            <Typography style={{ fontSize: '14px' }}>\n                              Новою поштою\n                            </Typography>\n                          }\n                          // label=\"Новою поштою\"\n                        />\n                        {field.value === 'NovaPoshta' && (\n                          <>\n                            <Box marginBottom={1}>\n                              <Controller\n                                name=\"city\"\n                                control={control}\n                                defaultValue=\"\"\n                                rules={{ required: true }}\n                                render={({ field }) => (\n                                  <>\n                                    <InputLabel\n                                      id=\"city-label\"\n                                      sx={{\n                                        fontSize: 12,\n                                        color: colors.auxiliaryText,\n                                      }}\n                                    >\n                                      Місто\n                                    </InputLabel>\n                                    <Select\n                                      sx={{\n                                        height: 40,\n                                        fontSize: 14,\n                                        color: 'inherit',\n                                      }}\n                                      labelId=\"city-label\"\n                                      {...field}\n                                      // label=\"Місто\"\n                                      fullWidth\n                                      // margin=\"normal\"\n                                      // variant=\"outlined\"\n                                    >\n                                      <MenuItem value=\"option1\">\n                                        Option 1\n                                      </MenuItem>\n                                      <MenuItem value=\"option2\">\n                                        Option 2\n                                      </MenuItem>\n                                      <MenuItem value=\"option3\">\n                                        Option 3\n                                      </MenuItem>\n                                    </Select>\n                                  </>\n                                )}\n                              />\n                            </Box>\n                            <Controller\n                              name=\"department\"\n                              control={control}\n                              defaultValue=\"\"\n                              rules={{ required: true }}\n                              render={({ field }) => (\n                                <div>\n                                  <InputLabel\n                                    id=\"department-label\"\n                                    sx={{\n                                      fontSize: 12,\n                                      color: colors.auxiliaryText,\n                                    }}\n                                  >\n                                    Відділення\n                                  </InputLabel>\n                                  <Select\n                                    sx={{\n                                      height: 40,\n                                      fontSize: 14,\n                                      color: 'inherit',\n                                      // '&:hover fieldset': {\n                                      //   borderColor: 'green',\n                                      // },\n                                    }}\n                                    labelId=\"department-label\"\n                                    {...field}\n                                    // label=\"Відділення\"\n\n                                    fullWidth\n                                    // variant=\"outlined\"\n                                  >\n                                    <MenuItem value=\"option1\">\n                                      Option 1\n                                    </MenuItem>\n                                    <MenuItem value=\"option2\">\n                                      Option 2\n                                    </MenuItem>\n                                    <MenuItem value=\"option3\">\n                                      Option 3\n                                    </MenuItem>\n                                  </Select>\n                                </div>\n                              )}\n                            />\n                          </>\n                        )}\n                      </DeliveryItem>\n                      <DeliveryItem>\n                        <FormControlLabel\n                          value=\"courier\"\n                          control={\n                            <Radio\n                              color=\"myColor\"\n                              size=\"small\"\n                              sx={{\n                                '& .MuiSvgIcon-root': {\n                                  fontSize: 16,\n                                },\n                              }}\n                            />\n                          }\n                          label={\n                            <Typography style={{ fontSize: '14px' }}>\n                              Кур'єром (лише по Києву)\n                            </Typography>\n                          }\n                          // label=\"Кур'єром (лише по Києву)\"\n                        />\n                        {field.value === 'courier' && (\n                          <Controller\n                            name=\"address\"\n                            control={control}\n                            defaultValue=\"\"\n                            rules={{ required: true }}\n                            render={({ field }) => (\n                              <div>\n                                <InputLabel\n                                  sx={{\n                                    fontSize: 12,\n                                    color: colors.auxiliaryText,\n                                  }}\n                                  id=\"address-label\"\n                                >\n                                  Адреса\n                                </InputLabel>\n\n                                <Select\n                                  sx={{\n                                    height: 40,\n                                    fontSize: 14,\n                                    color: 'inherit',\n                                    // '&:hover fieldset': {\n                                    //   borderColor: 'green',\n                                    // },\n                                  }}\n                                  {...field}\n                                  labelId=\"address-label\"\n                                  fullWidth\n                                  // variant=\"outlined\"\n                                >\n                                  <MenuItem value=\"option1\">Option 1</MenuItem>\n                                  <MenuItem value=\"option2\">Option 2</MenuItem>\n                                  <MenuItem value=\"option3\">Option 3</MenuItem>\n                                </Select>\n                              </div>\n                            )}\n                          />\n                        )}\n                      </DeliveryItem>\n                      <DeliveryItem>\n                        <FormControlLabel\n                          value=\"selfPickup\"\n                          control={\n                            <Radio\n                              color=\"myColor\"\n                              size=\"small\"\n                              sx={{\n                                '& .MuiSvgIcon-root': {\n                                  fontSize: 16,\n                                },\n                              }}\n                            />\n                          }\n                          label={\n                            <Typography style={{ fontSize: '14px' }}>\n                              Самовивіз (м. Київ, вул. Сім’ї Сосняних 11)\n                            </Typography>\n                          }\n\n                          // label=\"Самовивіз (м. Київ, вул. Сім’ї Сосняних 11)\"\n                        />\n                      </DeliveryItem>\n                    </ul>\n                  </RadioGroup>\n                </Box>\n              )}\n            />\n            <DeliveryDetailsTitle>Оплата</DeliveryDetailsTitle>\n            <Controller\n              name=\"payment\"\n              control={control}\n              defaultValue=\"\"\n              rules={{ required: true }}\n              render={({ field }) => (\n                <Box marginBottom={1.25}>\n                  <RadioGroup\n                    value={field.value}\n                    onChange={e => field.onChange(e.target.value)}\n                    sx={{ rowGap: 1 }}\n                  >\n                    <ul>\n                      <DeliveryItem>\n                        <FormControlLabel\n                          value=\"receiving\"\n                          control={\n                            <Radio\n                              color=\"myColor\"\n                              size=\"small\"\n                              sx={{\n                                '& .MuiSvgIcon-root': {\n                                  fontSize: 16,\n                                },\n                              }}\n                            />\n                          }\n                          label={\n                            <Typography style={{ fontSize: '14px' }}>\n                              Оплата під час отримання товару\n                            </Typography>\n                          }\n                        />\n                      </DeliveryItem>\n                      <DeliveryItem>\n                        <FormControlLabel\n                          value=\"now\"\n                          control={\n                            <Radio\n                              color=\"myColor\"\n                              size=\"small\"\n                              sx={{\n                                '& .MuiSvgIcon-root': {\n                                  fontSize: 16,\n                                },\n                              }}\n                            />\n                          }\n                          label={\n                            <>\n                              <Typography\n                                style={{\n                                  fontSize: '14px',\n                                  marginBottom: 3,\n                                }}\n                              >\n                                Оплата зараз (Visa/Mastercard)\n                              </Typography>\n                              <img src={liqpay} alt=\"liqpay icon\" />\n                            </>\n                          }\n                        />\n                      </DeliveryItem>\n                    </ul>\n                  </RadioGroup>\n                </Box>\n              )}\n            />\n            <FormControlLabel\n              sx={{ marginBottom: '10px' }}\n              control={\n                <Checkbox\n                  color=\"myColor\"\n                  size=\"small\"\n                  sx={{\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 16,\n                    },\n                  }}\n                />\n              }\n              label={\n                <>\n                  <Typography variant=\"span\" style={{ fontSize: 14 }}>\n                    Я приймаю умови\n                  </Typography>\n                  <OrderDetailsCondition\n                    type=\"button\"\n                    aria-label=\"відкрити публічний договір\"\n                    onClick={() => {\n                      console.log('open modal');\n                    }}\n                  >\n                    публічного договору\n                  </OrderDetailsCondition>\n                </>\n              }\n            />\n\n            {/* <input\n                className={visuallyHidden}\n                type=\"checkbox\"\n                id=\"conditions\"\n              />\n              <CheckboxLabel htmlFor=\"conditions\">\n                Я приймаю умови\n                <OrderDetailsCondition\n                  type=\"button\"\n                  aria-label=\"відкрити публічний договір\"\n                  onClick={() => {\n                    console.log('open modal');\n                  }}\n                >\n                  публічного договору\n                </OrderDetailsCondition>\n              </CheckboxLabel> */}\n            <OrderDetailsBtn type=\"submit\">\n              Підтвердити замовлення\n            </OrderDetailsBtn>\n          </DeliveryDetails>\n        </FormGroup>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\n/**\n * <input\n                        {...register(\"sun\")}\n                        type=\"radio\"\n                        name=\"weather\"\n                        value=\"sun\"\n                        id=\"field-sun\"\n                    />\n\n * <OrderDetailsTip>\n              *вартість доставки окремо оплачується при отриманні посилки у\n              відділенні\n            </OrderDetailsTip>\n */\n","import styled from '@emotion/styled';\nimport { Button, Input } from 'components';\nimport { colors, fontSizes, mq, utils } from 'styles/utils/variables';\nimport { Controller } from 'react-hook-form';\n\nexport const Wrapper = styled.div`\n  ${mq.tablet} {\n    display: flex;\n    flex-direction: row-reverse;\n    gap: 30px;\n  }\n\n  ${mq.desktop} {\n    gap: 40px;\n    justify-content: center;\n  }\n`;\n\nexport const OrderDetailsWrapper = styled.div`\n  width: 100%;\n  padding: 20px;\n  margin-bottom: 20px;\n  border-radius: ${utils.borderRadius};\n  background-color: ${colors.placingOrderBg};\n\n  & label {\n    gap: 5px;\n  }\n\n  ${mq.tablet} {\n    flex-grow: 0;\n    width: 380px;\n    height: 240px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const OrderDetailsTogether = styled.p`\n  font-size: ${fontSizes.l};\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nexport const OrderDetailsList = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const OrderDetailsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    /* padding: 20px 0; */\n    padding-top: 20px;\n    border-top: 1px solid ${colors.iconDark};\n    /* border-bottom: 1px solid ${colors.iconDark}; */\n    margin-bottom: 0;\n  }\n\n  &:last-of-type span {\n    font-size: ${fontSizes.l};\n    font-weight: 500;\n  }\n`;\n\nexport const OrderDetailsCondition = styled.button`\n  font-size: ${fontSizes.s};\n  text-decoration: underline;\n  margin-left: 5px;\n  margin-bottom: 0;\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const OrderDetailsLabel = styled.span`\n  flex-basis: 50%;\n`;\n\nexport const OrderDetailsValue = styled.span`\n  flex-basis: 50%;\n  text-align: end;\n`;\n\nexport const OrderDetailsBtn = styled(Button)`\n  margin-bottom: 20px;\n\n  ${mq.tablet} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const OrderDetailsTip = styled.p`\n  font-size: ${fontSizes.xs};\n`;\n\nexport const DeliveryDetails = styled.form``;\n\nexport const DeliveryDetailsTitle = styled.h2`\n  font-size: ${fontSizes.m};\n  margin-bottom: 10px;\n`;\n\nexport const DeliveryDetailsList = styled.ul`\n  font-size: ${fontSizes.s};\n  margin-bottom: 20px;\n`;\n\nexport const DeliveryDetailsItem = styled.li`\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const DeliveryDetailsLabel = styled.label`\n  font-size: ${fontSizes.xs};\n  margin-bottom: 5px;\n\n  color: ${colors.auxiliaryText};\n`;\n\nexport const DeliveryDetailsInput = styled(Input)`\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const CustomController = styled(Controller)`\n  font-size: 14px;\n  margin-bottom: 20px;\n`;\n\nexport const DeliveryItem = styled.li`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid ${colors.auxiliary};\n  border-radius: 4px;\n\n  background-color: ${colors.mainBg};\n\n  cursor: pointer;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  & label {\n    margin-right: 0;\n    /* padding: 10px; */\n  }\n`;\n","// import product from 'assets/images/product.jpg';\nimport {\n  ProductCharactDesc,\n  FilterDropdown,\n  Counter,\n  Button,\n} from 'components';\nimport {\n  AmountBtnWrapper,\n  BtnsItem,\n  BtnsList,\n  CharactItem,\n  CharactList,\n  CharactText,\n  CookingMethod,\n  CookingMethodImg,\n  CookingMethodsItem,\n  CookingMethodsList,\n  CookingMethodsTitle,\n  DescBtn,\n  DescBtnsWrapper,\n  DescText,\n  FiltersWrapper,\n  Img,\n  ImgWrapper,\n  Name,\n  Phone,\n  Price,\n  StockInIcon,\n  StockOutIcon,\n  StockText,\n  StockWrapper,\n  WeightBtn,\n  Wholesale,\n  Wrapper,\n  DescWrapper,\n} from './Product.styled';\nimport { useState, useEffect } from 'react';\nimport { typesOptions } from 'helpers';\nimport { coffeeFilter, turka, geyser, machine } from 'assets/images';\nimport { useParams } from 'react-router-dom';\n// import { getProductById } from 'services/fakeApi';\n\nimport * as API from 'services/api';\n\n// const weights = [250, 500, 1000];\nconst weights = [\n  { id: 1, value: 250 },\n  { id: 2, value: 500 },\n  { id: 3, value: 1000 },\n];\n\nconst descs = [\n  { id: 1, value: 'опис та характеристика' },\n  { id: 2, value: 'способи приготування' },\n];\n\nexport function Product() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedWeight, setSelectedWeight] = useState(weights[0].value);\n  const [selectedDesc, setSelectedDesc] = useState(descs[0].value);\n  const [product, setProduct] = useState(null);\n  const { productId } = useParams();\n\n  const onBtnClick = i => {\n    setSelectedWeight(weights[i].value);\n  };\n\n  const onDescBtnClick = i => {\n    setSelectedDesc(descs[i].value);\n  };\n\n  useEffect(() => {\n    (async function getProductById() {\n      try {\n        const product = await API.getProductById(productId);\n        setProduct(product[0]);\n      } catch (error) {\n        // toast.error('Film is not found');\n        // navigate('/', { replace: true });\n        // console.log(error);\n      }\n    })();\n  }, [productId]);\n\n  // const product = getProductById(productId);\n  // setProduct(product);\n\n  // if (product) {\n\n  // }\n  // const {\n  //   name,\n  //   image,\n  //   availability,\n  //   price,\n  //   description,\n  //   category,\n  //   characteristics,\n  //   roastLevel,\n  //   countries,\n  // } = product;\n\n  return (\n    <>\n      {product && (\n        <>\n          <Wrapper>\n            <ImgWrapper>\n              <Img src={product.image} alt={product.name} />\n            </ImgWrapper>\n            <DescWrapper>\n              <Name>{product.name}</Name>\n              <StockWrapper>\n                {product.availability ? (\n                  <>\n                    <StockInIcon /> <StockText>Є в наявності</StockText>\n                  </>\n                ) : (\n                  <>\n                    <StockOutIcon /> <StockText>Немає в наявності</StockText>\n                  </>\n                )}\n              </StockWrapper>\n              <ProductCharactDesc characteristics={product.characteristics} />\n              <FiltersWrapper>\n                <FilterDropdown\n                  desc={true}\n                  filterOptions={typesOptions}\n                  selectedOption={selectedOption}\n                  onSetOption={option => setSelectedOption(option)}\n                />\n                <BtnsList>\n                  {weights.map(({ id, value }, i) => {\n                    return (\n                      <BtnsItem key={id}>\n                        <WeightBtn\n                          selected={selectedWeight === value ? true : false}\n                          type=\"button\"\n                          aria-label={`${value} грам кави`}\n                          onClick={() => onBtnClick(i)}\n                        >\n                          {value}г\n                        </WeightBtn>\n                      </BtnsItem>\n                    );\n                  })}\n                </BtnsList>\n              </FiltersWrapper>\n              <Wholesale>\n                Придбання цього товару <b>оптом</b> можливе лише за попередньою\n                розмовою по <Phone href=\"tel:+380671429022\">телефону</Phone>\n              </Wholesale>\n              <Price>Ціна: {product.price} грн</Price>\n              <AmountBtnWrapper>\n                <Counter />\n                <Button\n                  onClick={() => {\n                    console.log('add to cart');\n                  }}\n                  type=\"button\"\n                  aria-label=\"додати до кошика\"\n                >\n                  До кошика\n                </Button>\n              </AmountBtnWrapper>\n            </DescWrapper>\n          </Wrapper>\n          <DescBtnsWrapper>\n            {descs.map(({ id, value }, i) => {\n              return (\n                <DescBtn\n                  key={id}\n                  selected={selectedDesc === value ? true : false}\n                  type=\"button\"\n                  aria-label={`подивитися ${value}`}\n                  onClick={() => onDescBtnClick(i)}\n                >\n                  {value}\n                </DescBtn>\n              );\n            })}\n          </DescBtnsWrapper>\n          {selectedDesc === descs[0].value && (\n            <>\n              <DescText>{product.description}</DescText>\n              <CharactList>\n                <CharactItem>\n                  <CharactText>Склад</CharactText>\n                  <CharactText>{product.category}</CharactText>\n                </CharactItem>\n                <CharactItem>\n                  <CharactText>Ступінь обсмаження</CharactText>\n                  <CharactText>{product.roastLevel}</CharactText>\n                </CharactItem>\n                <CharactItem>\n                  <CharactText>Країна походження</CharactText>\n                  <CharactText>{product.countries.join(', ')}</CharactText>\n                </CharactItem>\n              </CharactList>\n            </>\n          )}\n          {selectedDesc === descs[1].value && (\n            <>\n              <CookingMethodsTitle>\n                Рекомендовані способи приготування:\n              </CookingMethodsTitle>\n              <CookingMethodsList>\n                <CookingMethodsItem>\n                  <CookingMethodImg src={turka} />\n                  <CookingMethod>Турка</CookingMethod>\n                </CookingMethodsItem>\n                <CookingMethodsItem>\n                  <CookingMethodImg src={machine} />\n                  <CookingMethod>Кавомашина (еспресо)</CookingMethod>\n                </CookingMethodsItem>\n                <CookingMethodsItem>\n                  <CookingMethodImg src={geyser} />\n                  <CookingMethod>Гейзер</CookingMethod>\n                </CookingMethodsItem>\n\n                <CookingMethodsItem>\n                  <CookingMethodImg src={coffeeFilter} />\n                  <CookingMethod>Фільтр кавоварка</CookingMethod>\n                </CookingMethodsItem>\n              </CookingMethodsList>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilCheck = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z'\n  }));\n};\n\nUilCheck.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilCheck.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilCheck;","import styled from '@emotion/styled';\nimport { colors, fontSizes, mq, utils } from 'styles/utils/variables';\nimport { UilTimes } from '@iconscout/react-unicons';\nimport { UilCheck } from '@iconscout/react-unicons';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n\n  ${mq.tablet} {\n    display: flex;\n    gap: 30px;\n    /* flex-direction: row; */\n  }\n\n  ${mq.desktop} {\n    font-size: 16px;\n    gap: 60px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  flex-shrink: 0;\n  margin-bottom: 10px;\n  border-radius: ${utils.borderRadius};\n\n  ${mq.tablet} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 346px;\n\n  ${mq.tablet} {\n    width: 304px;\n    height: 313px;\n  }\n\n  ${mq.desktop} {\n    width: 415px;\n    height: 387px;\n  }\n`;\n\nexport const DescWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  ${mq.desktop} {\n    gap: 20px;\n  }\n`;\n\nexport const Name = styled.h1`\n  font-size: 24px;\n  font-weight: 500;\n\n  ${mq.tablet} {\n    font-size: 26px;\n  }\n\n  ${mq.desktop} {\n    font-size: 36px;\n  }\n`;\n\nexport const StockWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const StockInIcon = styled(UilCheck)`\n  color: ${colors.success};\n`;\n\nexport const StockOutIcon = styled(UilTimes)`\n  color: ${colors.error};\n`;\n\nexport const StockText = styled.span``;\n\nexport const Ingredients = styled.p``;\n\nexport const FiltersWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mq.tablet} {\n    justify-content: flex-start;\n    gap: 20px;\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  gap: 5px;\n\n  ${mq.tablet} {\n    gap: 10px;\n  }\n`;\n\nexport const BtnsItem = styled.li``;\n\nexport const WeightBtn = styled.button`\n  font-size: ${fontSizes.s};\n  padding: 8px 7px;\n\n  border: 1px solid ${colors.accent};\n  border-radius: ${utils.borderRadius};\n\n  background-color: ${({ selected }) =>\n    selected ? colors.accent : colors.mainBg};\n  color: ${({ selected }) => (selected ? colors.iconLight : colors.mainText)};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc},\n    background-color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.accent};\n    color: ${colors.iconLight};\n  }\n\n  ${mq.tablet} {\n    padding: 8px 10px;\n  }\n`;\n\nexport const Wholesale = styled.p`\n  font-size: ${fontSizes.s};\n`;\n\nexport const Phone = styled.a`\n  text-decoration: underline;\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const Price = styled.p`\n  font-weight: 500;\n  font-size: ${fontSizes.l};\n\n  ${mq.desktop} {\n    font-size: 24px;\n  }\n`;\n\nexport const AmountBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  & input {\n    height: 32px;\n    width: 40px;\n  }\n\n  & button {\n    ${mq.tablet} {\n      width: 220px;\n    }\n\n    ${mq.desktop} {\n      width: 250px;\n    }\n  }\n`;\n\nexport const DescBtnsWrapper = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${colors.auxiliary};\n  margin-bottom: 20px;\n\n  ${mq.tablet} {\n    gap: 20px;\n  }\n\n  ${mq.desktop} {\n    gap: 30px;\n    /* margin-bottom: 20px; */\n  }\n`;\n\nexport const DescBtn = styled.button`\n  font-weight: 500;\n  text-transform: uppercase;\n  text-align: left;\n  padding: 5px 0;\n\n  color: ${({ selected }) => (selected ? colors.accent : colors.mainText)};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const DescText = styled.p`\n  margin-bottom: 20px;\n\n  /* ${mq.desktop} {\n    margin-bottom: 20px;\n  } */\n`;\n\nexport const CharactList = styled.ul``;\n\nexport const CharactItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 5px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  ${mq.desktop} {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const CharactText = styled.span`\n  flex: 1;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n\n  &:first-of-type::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px dotted ${colors.auxiliary};\n    margin: 0 3px;\n  }\n\n  ${mq.tablet} {\n    &:last-of-type {\n      flex-basis: 50%;\n    }\n  }\n\n  ${mq.desktop} {\n    &:last-of-type {\n      flex-basis: 60%;\n    }\n  }\n`;\n\nexport const CookingMethodsTitle = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const CookingMethodsList = styled.ul``;\n\nexport const CookingMethodsItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  min-height: 39px;\n  /* padding-top: 5px; */\n\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CookingMethod = styled.span``;\n\nexport const CookingMethodImg = styled.img`\n  width: 30px;\n`;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { ProductOrder, Title, Button } from 'components';\nimport {\n  Input,\n  OrderDate,\n  OrderItem,\n  OrderList,\n  OrderTitle,\n  OrderWrapper,\n  ProductOrderList,\n  ProductSummary,\n  ProfileBtn,\n  ProfileEmail,\n  ProfileInformation,\n  ProfileItem,\n  ProfileList,\n  ProfileMenu,\n  ProfileName,\n  SectionTitle,\n  SectionWrapper,\n  Wrapper,\n  Label,\n} from './Profile.styled';\nimport { UilUser } from '@iconscout/react-unicons';\nimport { colors } from 'styles/utils/variables';\n\nconst theme = createTheme({\n  palette: {\n    myColor: {\n      main: colors.auxiliaryText,\n    },\n  },\n});\n\nexport function Profile() {\n  const [selectedItem, setSelectedItem] = useState('contacts');\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const phoneValidation = {\n    pattern: {\n      value: /^(\\+38)?(0\\d{9})$/,\n      message: 'Невірний формат номера (+380961234567)',\n    },\n  };\n\n  const handleClick = e => {\n    setSelectedItem(e.target.value);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Title>ПРОФІЛЬ</Title>\n      <Wrapper>\n        <ProfileMenu>\n          <ProfileInformation>\n            <UilUser width=\"30px\" height=\"30px\" />\n            <div>\n              <ProfileName>Тарас</ProfileName>\n              <ProfileEmail>taras@gmail.com</ProfileEmail>\n            </div>\n          </ProfileInformation>\n          <ProfileList>\n            <ProfileItem>\n              <ProfileBtn\n                selected={selectedItem === 'contacts'}\n                type=\"button\"\n                value=\"contacts\"\n                aria-label=\"перейти на сторінку контактна інформація\"\n                onClick={e => handleClick(e)}\n              >\n                Контактна інформація\n              </ProfileBtn>\n            </ProfileItem>\n            <ProfileItem>\n              <ProfileBtn\n                selected={selectedItem === 'password'}\n                type=\"button\"\n                value=\"password\"\n                aria-label=\"перейти на сторінку зміни паролю\"\n                onClick={e => handleClick(e)}\n              >\n                Зміна паролю\n              </ProfileBtn>\n            </ProfileItem>\n            <ProfileItem>\n              <ProfileBtn\n                selected={selectedItem === 'history'}\n                type=\"button\"\n                value=\"history\"\n                aria-label=\"перейти на сторінку історія замовлень\"\n                onClick={e => handleClick(e)}\n              >\n                Історія замовлень\n              </ProfileBtn>\n            </ProfileItem>\n          </ProfileList>\n        </ProfileMenu>\n        {selectedItem === 'contacts' && (\n          <SectionWrapper>\n            <SectionTitle>Контактна інформація</SectionTitle>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Label htmlFor=\"lastName\">Прізвище</Label>\n              <Input\n                {...register('lastName')}\n                id=\"lastName\"\n                error={!!errors.lastName}\n                helperText={errors.lastName?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"firstName\">Ім'я</Label>\n              <Input\n                {...register('firstName')}\n                id=\"firstName\"\n                error={!!errors.firstName}\n                helperText={errors.firstName?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"phoneNumber\">Телефон</Label>\n              <Input\n                {...register('phoneNumber', phoneValidation)}\n                id=\"firstName\"\n                error={!!errors.phoneNumber}\n                helperText={errors.phoneNumber?.message}\n                color=\"myColor\"\n                defaultValue=\"+380\"\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Відправити\n              </Button>\n            </form>\n          </SectionWrapper>\n        )}\n        {selectedItem === 'history' && (\n          <SectionWrapper>\n            <SectionTitle>Ваші замовлення</SectionTitle>\n            <OrderList>\n              <OrderItem>\n                <OrderWrapper>\n                  <OrderTitle>Замовлення № 342452-21</OrderTitle>\n                  <OrderDate>06.05.2023</OrderDate>\n                </OrderWrapper>\n                <ProductOrderList>\n                  <ProductOrder placing />\n                  <ProductOrder placing />\n                </ProductOrderList>\n                <ProductSummary>Разом: 1310</ProductSummary>\n              </OrderItem>\n              <OrderItem>\n                <OrderWrapper>\n                  <OrderTitle>Замовлення № 342452-21</OrderTitle>\n                  <OrderDate>06.05.2023</OrderDate>\n                </OrderWrapper>\n                <ProductOrderList>\n                  <ProductOrder placing />\n                  <ProductOrder placing />\n                </ProductOrderList>\n                <ProductSummary>Разом: 1310</ProductSummary>\n              </OrderItem>\n            </OrderList>\n          </SectionWrapper>\n        )}\n        {selectedItem === 'password' && (\n          <SectionWrapper>\n            <SectionTitle>Зміна паролю</SectionTitle>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Label htmlFor=\"oldPassword\">Старий пароль</Label>\n              <Input\n                {...register('oldPassword')}\n                id=\"oldPassword\"\n                error={!!errors.oldPassword}\n                helperText={errors.oldPassword?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"newPassword\">Новий пароль</Label>\n              <Input\n                {...register('newPassword')}\n                id=\"newPassword\"\n                error={!!errors.newPassword}\n                helperText={errors.newPassword?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"passwordConfirmation\">\n                Підтвердження нового паролю\n              </Label>\n              <Input\n                {...register('passwordConfirmation')}\n                id=\"passwordConfirmation\"\n                error={!!errors.passwordConfirmation}\n                helperText={errors.passwordConfirmation?.message}\n                color=\"myColor\"\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Відправити\n              </Button>\n            </form>\n          </SectionWrapper>\n        )}\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors, fontSizes, mq, utils } from 'styles/utils/variables';\nimport { TextField, InputLabel } from '@mui/material';\n\nexport const Wrapper = styled.div`\n  ${mq.tablet} {\n    display: flex;\n    gap: 20px;\n  }\n\n  ${mq.desktop} {\n    gap: 30px;\n  }\n`;\n\nexport const ProfileMenu = styled.div`\n  width: 100%;\n  padding: 20px 15px;\n  border-radius: ${utils.borderRadius};\n\n  background-color: ${colors.auxiliaryBg};\n\n  ${mq.onlyMobile} {\n    margin-bottom: 30px;\n  }\n\n  ${mq.tablet} {\n    width: 240px;\n    height: 196px;\n  }\n\n  ${mq.desktop} {\n    width: 270px;\n  }\n`;\n\nexport const ProfileInformation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid ${colors.mainText};\n`;\n\nexport const ProfileName = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nexport const ProfileEmail = styled.span`\n  color: ${colors.auxiliaryText};\n`;\n\nexport const ProfileList = styled.ul``;\n\nexport const ProfileItem = styled.li`\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ProfileBtn = styled.button`\n  color: ${({ selected }) => selected && colors.accent};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: ${fontSizes.l};\n  font-weight: 500;\n  margin-bottom: 20px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid ${colors.auxiliary};\n`;\n\nexport const OrderList = styled.ul``;\n\nexport const OrderItem = styled.li`\n  /* padding: 10px 0; */\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid ${colors.auxiliary};\n\n  &:last-of-type {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: 0;\n  }\n`;\n\nexport const OrderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 20px;\n`;\n\nexport const OrderTitle = styled.span`\n  font-weight: 500;\n`;\n\nexport const OrderDate = styled.span``;\n\nexport const ProductOrderList = styled.ul`\n  margin-bottom: 10px;\n`;\n\nexport const ProductSummary = styled.span`\n  font-weight: 500;\n  display: block;\n  text-align: right;\n`;\n\nexport const SectionWrapper = styled.div`\n  width: 100%;\n\n  & button {\n    display: block;\n\n    ${mq.tablet} {\n      width: 400px;\n    }\n  }\n`;\n\nexport const Input = styled(TextField)`\n  margin-bottom: 10px;\n  width: 100%;\n  background-color: ${colors.mainBg};\n\n  & input {\n    font-size: ${fontSizes.s};\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n\n  ${mq.tablet} {\n    width: 400px;\n  }\n`;\n\nexport const Label = styled(InputLabel)`\n  font-size: ${fontSizes.xs};\n  color: ${colors.auxiliaryText};\n`;\n","import { Title } from 'components';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\n\nexport function Reviews() {\n  return (\n    <>\n      <Title>ВІДГУКИ</Title>\n      <ReviewsList>\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n        <ReviewsItem />\n      </ReviewsList>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors, mq } from 'styles/utils/variables';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  ${mq.tablet} {\n    gap: 30px;\n  }\n`;\n\nexport const ReviewsItem = styled.li`\n  width: 170px;\n  height: 360px;\n\n  background-color: ${colors.auxiliaryText};\n\n  ${mq.tablet} {\n    width: 202px;\n    height: 294px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilFilter = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M19,2H5A3,3,0,0,0,2,5V6.17a3,3,0,0,0,.25,1.2l0,.06a2.81,2.81,0,0,0,.59.86L9,14.41V21a1,1,0,0,0,.47.85A1,1,0,0,0,10,22a1,1,0,0,0,.45-.11l4-2A1,1,0,0,0,15,19V14.41l6.12-6.12a2.81,2.81,0,0,0,.59-.86l0-.06A3,3,0,0,0,22,6.17V5A3,3,0,0,0,19,2ZM13.29,13.29A1,1,0,0,0,13,14v4.38l-2,1V14a1,1,0,0,0-.29-.71L5.41,8H18.59ZM20,6H4V5A1,1,0,0,1,5,4H19a1,1,0,0,1,1,1Z'\n  }));\n};\n\nUilFilter.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilFilter.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilFilter;","import { UilFilter } from '@iconscout/react-unicons';\nimport {\n  Backdrop,\n  FilterDropdown,\n  ProductCard,\n  ShopFilter,\n  Title,\n} from 'components';\nimport { filterOptions } from 'helpers';\nimport { useEffect, useState } from 'react';\nimport MediaQuery from 'react-responsive';\nimport { breakpoints } from 'styles/utils/variables';\nimport {\n  ContentWrapper,\n  FilterBtn,\n  FiltersWrapper,\n  ProductList,\n} from './Shop.styled';\n// import { getProducts } from 'services/fakeApi';\nimport * as API from 'services/api';\n\nexport function Shop() {\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n\n  const onFilterClick = () => setIsFilterOpen(!isFilterOpen);\n\n  useEffect(() => {\n    (async function getProducts() {\n      try {\n        const products = await API.getProducts();\n        setProducts(products);\n      } catch (error) {\n        // toast.error('Film is not found');\n        // navigate('/', { replace: true });\n        // console.log(error);\n      }\n    })();\n    // const products = getProducts();\n    // setProducts(products);\n  }, []);\n\n  return (\n    <>\n      <Title>Кава</Title>\n      <FiltersWrapper>\n        <MediaQuery maxWidth={parseInt(breakpoints.preTablet)}>\n          <FilterBtn\n            type=\"button\"\n            aria-label=\"відкрити фільтр\"\n            onClick={onFilterClick}\n          >\n            <UilFilter width=\"20px\" height=\"22px\" />\n          </FilterBtn>\n          {isFilterOpen && (\n            <Backdrop open={isFilterOpen}>\n              <ShopFilter handleClick={onFilterClick} />\n            </Backdrop>\n          )}\n        </MediaQuery>\n        <FilterDropdown\n          filterOptions={filterOptions}\n          selectedOption={selectedOption}\n          onSetOption={option => setSelectedOption(option)}\n        />\n      </FiltersWrapper>\n      <ContentWrapper>\n        <MediaQuery minWidth={parseInt(breakpoints.tablet)}>\n          <ShopFilter />\n        </MediaQuery>\n        <ProductList>\n          {products.map(product => (\n            <ProductCard key={product._id} product={product} />\n          ))}\n        </ProductList>\n      </ContentWrapper>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors, utils, mq } from 'styles/utils/variables';\n\nexport const FiltersWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 30px;\n  /* align-items: ; */\n\n  ${mq.desktop} {\n    margin-bottom: 40px;\n  }\n\n  & div {\n    margin-left: auto;\n  }\n`;\n\nexport const FilterBtn = styled.button`\n  line-height: 0;\n\n  width: 40px;\n  height: 40px;\n  padding: 5px;\n  border: 1px solid ${colors.auxiliary};\n  border-radius: ${utils.borderRadius};\n\n  /* color: ${colors.iconLight}; */\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  /* justify-content: space-between; */\n  gap: 40px;\n\n  ${mq.desktop} {\n    gap: 28px;\n  }\n`;\n\nexport const ProductList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-self: end;\n\n  ${mq.tablet} {\n    gap: 20px;\n  }\n`;\n"],"names":["AboutUs","_jsxs","_Fragment","children","_jsx","Title","UilMapMarker","props","color","size","otherProps","_objectWithoutProperties","_excluded","React","_objectSpread","xmlns","width","height","viewBox","fill","d","propTypes","PropTypes","defaultProps","UilClock","Contacts","Wrapper","ContactsList","ContactsItem","ContactsLink","href","UilEnvelopeAlt","UilPhoneAlt","Feedback","style","marginBottom","Map","styled","_templateObject","_taggedTemplateLiteral","mq","_templateObject2","_templateObject3","_templateObject4","utils","colors","_templateObject5","Home","Hero","Features","Popular","ReviewsHome","PaymentDelivery","theme","createTheme","palette","myColor","main","PlacingOrder","_useForm","useForm","register","handleSubmit","control","ThemeProvider","OrderDetailsWrapper","OrderDetailsTogether","OrderDetailsList","OrderDetailsItem","OrderDetailsLabel","OrderDetailsValue","OrderDetailsTip","FormGroup","DeliveryDetails","onSubmit","data","console","log","DeliveryDetailsTitle","DeliveryDetailsList","DeliveryDetailsItem","DeliveryDetailsLabel","htmlFor","DeliveryDetailsInput","id","required","type","Controller","name","defaultValue","rules","render","_ref","field","Box","RadioGroup","value","onChange","e","target","sx","rowGap","DeliveryItem","FormControlLabel","Radio","fontSize","label","Typography","_ref2","InputLabel","Select","labelId","fullWidth","MenuItem","_ref3","_ref4","_ref5","src","liqpay","alt","Checkbox","variant","OrderDetailsCondition","onClick","OrderDetailsBtn","fontSizes","_templateObject6","_templateObject7","_templateObject8","Button","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","Input","_templateObject16","CustomController","_templateObject17","_templateObject18","weights","descs","Product","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","_useState3","_useState4","selectedWeight","setSelectedWeight","_useState5","_useState6","selectedDesc","setSelectedDesc","_useState7","_useState8","product","setProduct","productId","useParams","useEffect","_getProductById","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_product","wrap","_context","prev","next","API","sent","t0","stop","apply","arguments","ImgWrapper","Img","image","DescWrapper","Name","StockWrapper","availability","StockInIcon","StockText","StockOutIcon","ProductCharactDesc","characteristics","FiltersWrapper","FilterDropdown","desc","filterOptions","typesOptions","onSetOption","option","BtnsList","map","i","BtnsItem","WeightBtn","selected","concat","onBtnClick","Wholesale","Phone","Price","price","AmountBtnWrapper","Counter","DescBtnsWrapper","DescBtn","onDescBtnClick","DescText","description","CharactList","CharactItem","CharactText","category","roastLevel","countries","join","CookingMethodsTitle","CookingMethodsList","CookingMethodsItem","CookingMethodImg","turka","CookingMethod","machine","geyser","coffeeFilter","UilCheck","UilTimes","Ingredients","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject28","_templateObject29","Profile","_errors$lastName","_errors$firstName","_errors$phoneNumber","_errors$oldPassword","_errors$newPassword","_errors$passwordConfi","selectedItem","setSelectedItem","errors","formState","handleClick","ProfileMenu","ProfileInformation","UilUser","ProfileName","ProfileEmail","ProfileList","ProfileItem","ProfileBtn","SectionWrapper","SectionTitle","Label","error","lastName","helperText","message","firstName","pattern","phoneNumber","OrderList","OrderItem","OrderWrapper","OrderTitle","OrderDate","ProductOrderList","ProductOrder","placing","ProductSummary","oldPassword","newPassword","passwordConfirmation","TextField","Reviews","ReviewsList","ReviewsItem","UilFilter","Shop","products","setProducts","isFilterOpen","setIsFilterOpen","onFilterClick","_getProducts","_products","MediaQuery","maxWidth","parseInt","breakpoints","FilterBtn","Backdrop","open","ShopFilter","ContentWrapper","minWidth","ProductList","ProductCard","_id"],"sourceRoot":""}