{"version":3,"file":"static/js/645.d0b9b2cc.chunk.js","mappings":"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","sources":["../node_modules/@iconscout/react-unicons/icons/uil-check.js","pages/Product/Product.styled.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UilCheck = (props) => {\n  const { color, size, ...otherProps } = props\n  return React.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: size,\n    height: size,\n    viewBox: '0 0 24 24',\n    fill: color,\n    ...otherProps\n  }, React.createElement('path', {\n    d: 'M18.71,7.21a1,1,0,0,0-1.42,0L9.84,14.67,6.71,11.53A1,1,0,1,0,5.29,13l3.84,3.84a1,1,0,0,0,1.42,0l8.16-8.16A1,1,0,0,0,18.71,7.21Z'\n  }));\n};\n\nUilCheck.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nUilCheck.defaultProps = {\n  color: 'currentColor',\n  size: '24',\n};\n\nexport default UilCheck;","import styled from '@emotion/styled';\nimport { colors, fontSizes, mq, utils } from 'styles/utils/variables';\nimport { UilTimes } from '@iconscout/react-unicons';\nimport { UilCheck } from '@iconscout/react-unicons';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n\n  ${mq.tablet} {\n    display: flex;\n    gap: 30px;\n    /* flex-direction: row; */\n  }\n\n  ${mq.desktop} {\n    font-size: 16px;\n    gap: 60px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  flex-shrink: 0;\n  margin-bottom: 10px;\n  border-radius: ${utils.borderRadius};\n\n  ${mq.tablet} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 346px;\n\n  ${mq.tablet} {\n    width: 304px;\n    height: 313px;\n  }\n\n  ${mq.desktop} {\n    width: 415px;\n    height: 387px;\n  }\n`;\n\nexport const DescWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  ${mq.desktop} {\n    gap: 20px;\n  }\n`;\n\nexport const Name = styled.h1`\n  font-size: 24px;\n  font-weight: 500;\n\n  ${mq.tablet} {\n    font-size: 26px;\n  }\n\n  ${mq.desktop} {\n    font-size: 36px;\n  }\n`;\n\nexport const StockWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nexport const StockInIcon = styled(UilCheck)`\n  color: ${colors.success};\n`;\n\nexport const StockOutIcon = styled(UilTimes)`\n  color: ${colors.error};\n`;\n\nexport const StockText = styled.span``;\n\nexport const Ingredients = styled.p``;\n\nexport const FiltersWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mq.tablet} {\n    justify-content: flex-start;\n    gap: 20px;\n  }\n`;\n\nexport const BtnsList = styled.ul`\n  display: flex;\n  gap: 5px;\n\n  ${mq.tablet} {\n    gap: 10px;\n  }\n`;\n\nexport const BtnsItem = styled.li``;\n\nexport const WeightBtn = styled.button`\n  font-size: ${fontSizes.s};\n  padding: 8px 7px;\n\n  border: 1px solid ${colors.accent};\n  border-radius: ${utils.borderRadius};\n\n  background-color: ${({ selected }) =>\n    selected ? colors.accent : colors.mainBg};\n  color: ${({ selected }) => (selected ? colors.iconLight : colors.mainText)};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc},\n    background-color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.accent};\n    color: ${colors.iconLight};\n  }\n\n  ${mq.tablet} {\n    padding: 8px 10px;\n  }\n`;\n\nexport const Wholesale = styled.p`\n  font-size: ${fontSizes.s};\n`;\n\nexport const Phone = styled.a`\n  text-decoration: underline;\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const Price = styled.p`\n  font-weight: 500;\n  font-size: ${fontSizes.l};\n\n  ${mq.desktop} {\n    font-size: 24px;\n  }\n`;\n\nexport const AmountBtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  & input {\n    height: 32px;\n    width: 40px;\n  }\n\n  & button {\n    ${mq.tablet} {\n      width: 220px;\n    }\n\n    ${mq.desktop} {\n      width: 250px;\n    }\n  }\n`;\n\nexport const DescBtnsWrapper = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${colors.auxiliary};\n  margin-bottom: 20px;\n\n  ${mq.tablet} {\n    gap: 20px;\n  }\n\n  ${mq.desktop} {\n    gap: 30px;\n    /* margin-bottom: 20px; */\n  }\n`;\n\nexport const DescBtn = styled.button`\n  font-weight: 500;\n  text-transform: uppercase;\n  text-align: left;\n  padding: 5px 0;\n\n  color: ${({ selected }) => (selected ? colors.accent : colors.mainText)};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const DescText = styled.p`\n  margin-bottom: 20px;\n\n  /* ${mq.desktop} {\n    margin-bottom: 20px;\n  } */\n`;\n\nexport const CharactList = styled.ul``;\n\nexport const CharactItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 5px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  ${mq.desktop} {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const CharactText = styled.span`\n  flex: 1;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n\n  &:first-of-type::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px dotted ${colors.auxiliary};\n    margin: 0 3px;\n  }\n\n  ${mq.tablet} {\n    &:last-of-type {\n      flex-basis: 50%;\n    }\n  }\n\n  ${mq.desktop} {\n    &:last-of-type {\n      flex-basis: 60%;\n    }\n  }\n`;\n\nexport const CookingMethodsTitle = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const CookingMethodsList = styled.ul``;\n\nexport const CookingMethodsItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  min-height: 39px;\n  /* padding-top: 5px; */\n\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const CookingMethod = styled.span``;\n\nexport const CookingMethodImg = styled.img`\n  width: 30px;\n`;\n"],"names":["UilCheck","props","color","size","otherProps","_objectWithoutProperties","_excluded","React","_objectSpread","xmlns","width","height","viewBox","fill","d","propTypes","PropTypes","defaultProps","Wrapper","styled","_templateObject","_taggedTemplateLiteral","mq","ImgWrapper","_templateObject2","utils","Img","_templateObject3","DescWrapper","_templateObject4","Name","_templateObject5","StockWrapper","_templateObject6","StockInIcon","_templateObject7","colors","StockOutIcon","UilTimes","_templateObject8","StockText","_templateObject9","Ingredients","_templateObject10","FiltersWrapper","_templateObject11","BtnsList","_templateObject12","BtnsItem","_templateObject13","WeightBtn","_templateObject14","fontSizes","_ref","selected","_ref2","Wholesale","_templateObject15","Phone","_templateObject16","Price","_templateObject17","AmountBtnWrapper","_templateObject18","DescBtnsWrapper","_templateObject19","DescBtn","_templateObject20","_ref3","DescText","_templateObject21","CharactList","_templateObject22","CharactItem","_templateObject23","CharactText","_templateObject24","CookingMethodsTitle","_templateObject25","CookingMethodsList","_templateObject26","CookingMethodsItem","_templateObject27","CookingMethod","_templateObject28","CookingMethodImg","_templateObject29"],"sourceRoot":""}