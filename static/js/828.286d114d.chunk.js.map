{"version":3,"file":"static/js/828.286d114d.chunk.js","mappings":"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","sources":["pages/Profile/Profile.js","pages/Profile/Profile.styled.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { createTheme, ThemeProvider } from '@mui/material';\nimport { ProductOrder, Title, Button } from 'components';\nimport {\n  Input,\n  OrderDate,\n  OrderItem,\n  OrderList,\n  OrderTitle,\n  OrderWrapper,\n  ProductOrderList,\n  ProductSummary,\n  ProfileBtn,\n  ProfileEmail,\n  ProfileInformation,\n  ProfileItem,\n  ProfileList,\n  ProfileMenu,\n  ProfileName,\n  SectionTitle,\n  SectionWrapper,\n  Wrapper,\n  Label,\n} from './Profile.styled';\nimport { UilUser } from '@iconscout/react-unicons';\nimport { colors } from 'styles/utils/variables';\n\nconst theme = createTheme({\n  palette: {\n    myColor: {\n      main: colors.auxiliaryText,\n    },\n  },\n});\n\nexport function Profile() {\n  const [selectedItem, setSelectedItem] = useState('contacts');\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const phoneValidation = {\n    pattern: {\n      value: /^(\\+38)?(0\\d{9})$/,\n      message: 'Невірний формат номера (+380961234567)',\n    },\n  };\n\n  const handleClick = e => {\n    setSelectedItem(e.target.value);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Title>ПРОФІЛЬ</Title>\n      <Wrapper>\n        <ProfileMenu>\n          <ProfileInformation>\n            <UilUser width=\"30px\" height=\"30px\" />\n            <div>\n              <ProfileName>Тарас</ProfileName>\n              <ProfileEmail>taras@gmail.com</ProfileEmail>\n            </div>\n          </ProfileInformation>\n          <ProfileList>\n            <ProfileItem>\n              <ProfileBtn\n                selected={selectedItem === 'contacts'}\n                type=\"button\"\n                value=\"contacts\"\n                aria-label=\"перейти на сторінку контактна інформація\"\n                onClick={e => handleClick(e)}\n              >\n                Контактна інформація\n              </ProfileBtn>\n            </ProfileItem>\n            <ProfileItem>\n              <ProfileBtn\n                selected={selectedItem === 'password'}\n                type=\"button\"\n                value=\"password\"\n                aria-label=\"перейти на сторінку зміни паролю\"\n                onClick={e => handleClick(e)}\n              >\n                Зміна паролю\n              </ProfileBtn>\n            </ProfileItem>\n            <ProfileItem>\n              <ProfileBtn\n                selected={selectedItem === 'history'}\n                type=\"button\"\n                value=\"history\"\n                aria-label=\"перейти на сторінку історія замовлень\"\n                onClick={e => handleClick(e)}\n              >\n                Історія замовлень\n              </ProfileBtn>\n            </ProfileItem>\n          </ProfileList>\n        </ProfileMenu>\n        {selectedItem === 'contacts' && (\n          <SectionWrapper>\n            <SectionTitle>Контактна інформація</SectionTitle>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Label htmlFor=\"lastName\">Прізвище</Label>\n              <Input\n                {...register('lastName')}\n                id=\"lastName\"\n                error={!!errors.lastName}\n                helperText={errors.lastName?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"firstName\">Ім'я</Label>\n              <Input\n                {...register('firstName')}\n                id=\"firstName\"\n                error={!!errors.firstName}\n                helperText={errors.firstName?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"phoneNumber\">Телефон</Label>\n              <Input\n                {...register('phoneNumber', phoneValidation)}\n                id=\"firstName\"\n                error={!!errors.phoneNumber}\n                helperText={errors.phoneNumber?.message}\n                color=\"myColor\"\n                defaultValue=\"+380\"\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Відправити\n              </Button>\n            </form>\n          </SectionWrapper>\n        )}\n        {selectedItem === 'history' && (\n          <SectionWrapper>\n            <SectionTitle>Ваші замовлення</SectionTitle>\n            <OrderList>\n              <OrderItem>\n                <OrderWrapper>\n                  <OrderTitle>Замовлення № 342452-21</OrderTitle>\n                  <OrderDate>06.05.2023</OrderDate>\n                </OrderWrapper>\n                <ProductOrderList>\n                  <ProductOrder placing />\n                  <ProductOrder placing />\n                </ProductOrderList>\n                <ProductSummary>Разом: 1310</ProductSummary>\n              </OrderItem>\n              <OrderItem>\n                <OrderWrapper>\n                  <OrderTitle>Замовлення № 342452-21</OrderTitle>\n                  <OrderDate>06.05.2023</OrderDate>\n                </OrderWrapper>\n                <ProductOrderList>\n                  <ProductOrder placing />\n                  <ProductOrder placing />\n                </ProductOrderList>\n                <ProductSummary>Разом: 1310</ProductSummary>\n              </OrderItem>\n            </OrderList>\n          </SectionWrapper>\n        )}\n        {selectedItem === 'password' && (\n          <SectionWrapper>\n            <SectionTitle>Зміна паролю</SectionTitle>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Label htmlFor=\"oldPassword\">Старий пароль</Label>\n              <Input\n                {...register('oldPassword')}\n                id=\"oldPassword\"\n                error={!!errors.oldPassword}\n                helperText={errors.oldPassword?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"newPassword\">Новий пароль</Label>\n              <Input\n                {...register('newPassword')}\n                id=\"newPassword\"\n                error={!!errors.newPassword}\n                helperText={errors.newPassword?.message}\n                color=\"myColor\"\n              />\n              <Label htmlFor=\"passwordConfirmation\">\n                Підтвердження нового паролю\n              </Label>\n              <Input\n                {...register('passwordConfirmation')}\n                id=\"passwordConfirmation\"\n                error={!!errors.passwordConfirmation}\n                helperText={errors.passwordConfirmation?.message}\n                color=\"myColor\"\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Відправити\n              </Button>\n            </form>\n          </SectionWrapper>\n        )}\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n","import styled from '@emotion/styled';\nimport { colors, fontSizes, mq, utils } from 'styles/utils/variables';\nimport { TextField, InputLabel } from '@mui/material';\n\nexport const Wrapper = styled.div`\n  ${mq.tablet} {\n    display: flex;\n    gap: 20px;\n  }\n\n  ${mq.desktop} {\n    gap: 30px;\n  }\n`;\n\nexport const ProfileMenu = styled.div`\n  width: 100%;\n  padding: 20px 15px;\n  border-radius: ${utils.borderRadius};\n\n  background-color: ${colors.auxiliaryBg};\n\n  ${mq.onlyMobile} {\n    margin-bottom: 30px;\n  }\n\n  ${mq.tablet} {\n    width: 240px;\n    height: 196px;\n  }\n\n  ${mq.desktop} {\n    width: 270px;\n  }\n`;\n\nexport const ProfileInformation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  padding-bottom: 15px;\n  margin-bottom: 15px;\n  border-bottom: 1px solid ${colors.mainText};\n`;\n\nexport const ProfileName = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nexport const ProfileEmail = styled.span`\n  color: ${colors.auxiliaryText};\n`;\n\nexport const ProfileList = styled.ul``;\n\nexport const ProfileItem = styled.li`\n  margin-bottom: 10px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ProfileBtn = styled.button`\n  color: ${({ selected }) => selected && colors.accent};\n\n  transition: color ${utils.transitDur} ${utils.transitFunc};\n\n  &:hover,\n  &:focus {\n    color: ${colors.accent};\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: ${fontSizes.l};\n  font-weight: 500;\n  margin-bottom: 20px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid ${colors.auxiliary};\n`;\n\nexport const OrderList = styled.ul``;\n\nexport const OrderItem = styled.li`\n  /* padding: 10px 0; */\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid ${colors.auxiliary};\n\n  &:last-of-type {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: 0;\n  }\n`;\n\nexport const OrderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  margin-bottom: 20px;\n`;\n\nexport const OrderTitle = styled.span`\n  font-weight: 500;\n`;\n\nexport const OrderDate = styled.span``;\n\nexport const ProductOrderList = styled.ul`\n  margin-bottom: 10px;\n`;\n\nexport const ProductSummary = styled.span`\n  font-weight: 500;\n  display: block;\n  text-align: right;\n`;\n\nexport const SectionWrapper = styled.div`\n  width: 100%;\n\n  & button {\n    display: block;\n\n    ${mq.tablet} {\n      width: 400px;\n    }\n  }\n`;\n\nexport const Input = styled(TextField)`\n  margin-bottom: 10px;\n  width: 100%;\n  background-color: ${colors.mainBg};\n\n  & input {\n    font-size: ${fontSizes.s};\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  &:last-of-type {\n    margin-bottom: 20px;\n  }\n\n  ${mq.tablet} {\n    width: 400px;\n  }\n`;\n\nexport const Label = styled(InputLabel)`\n  font-size: ${fontSizes.xs};\n  color: ${colors.auxiliaryText};\n`;\n","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;"],"names":["theme","createTheme","palette","myColor","main","colors","Profile","_errors$lastName","_errors$firstName","_errors$phoneNumber","_errors$oldPassword","_errors$newPassword","_errors$passwordConfi","_useState","useState","_useState2","_slicedToArray","selectedItem","setSelectedItem","_useForm","useForm","register","handleSubmit","errors","formState","onSubmit","data","console","log","handleClick","e","target","value","_jsxs","ThemeProvider","children","_jsx","Title","Wrapper","ProfileMenu","ProfileInformation","UilUser","width","height","ProfileName","ProfileEmail","ProfileList","ProfileItem","ProfileBtn","selected","type","onClick","SectionWrapper","SectionTitle","Label","htmlFor","Input","_objectSpread","id","error","lastName","helperText","message","color","firstName","pattern","phoneNumber","defaultValue","Button","variant","OrderList","OrderItem","OrderWrapper","OrderTitle","OrderDate","ProductOrderList","ProductOrder","placing","ProductSummary","oldPassword","newPassword","passwordConfirmation","styled","_templateObject","_taggedTemplateLiteral","mq","_templateObject2","utils","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_ref","_templateObject9","fontSizes","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","TextField","_templateObject18","InputLabel","_templateObject19","React","useTheme","ThemeContext","Symbol","for","props","localTheme","outerTheme","output","_extends","mergeOuterLocalTheme","nested","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","arguments","length","undefined","resolvedTheme","mergedTheme","result","_defineProperty","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext"],"sourceRoot":""}